package main

import "fmt"

// 代入と変数まとめ
func main() {

	// 代入
	// Go言語では使用しない変数を宣言するとコンパイルエラーになるため、一部コメントアウトしてコードを記述

	// 同時に複数の値に代入
	// a, b = 3.14, "テスト"

	// 2つの値を返す関数fnの戻り値を代入する
	// c, d = fn()

	// ブランク識別子: 使用しない変数がある場合に、コンパイルエラーを回避するために用いる
	// 1つ目の戻り値しか必要ない場合は、2つ目の戻り値にブランク識別子を用いる
	// c, _ = fn()

	


	// 変数宣言

	// int型の変数x
	var x int
	fmt.Println("int型の初期値： ", x)

	// 同じ型の変数を同時に複数宣言するときは、変数名をカンマを使って列挙する
	// 初期値を与えるときは、変数と対になるよう同数を指定する
	var a, b, c int = 1, 2, 3

	// 丸括弧を使ったグルーピング
	var (
		i int = 100
		s1, s2 string
	)
	fmt.Println("string型の初期値： ", s1 + s2)

	// 初期値が与えられている場合は、型を省略可能（この場合、型はiの型であるint型となる）
	var ii = i
	fmt.Println("i + ii = ", i + ii)

	/* 
	　　関数の中で変数を宣言し、初期値を与える場合のみ省略書式が使える
	    ※ すでに宣言済みの変数には使用できないが、複数の変数に対して使う場合は、どれか1つでも宣言されていない変数があれば使用可能
	*/
	num := 123
	str, n := "文字列", 500
	fmt.Println(num, str, n, a + b + c)
}