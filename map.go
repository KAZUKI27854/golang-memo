package main

import "fmt"

/*
 【マップまとめ】
 ・マップはスライスと同じく参照型のひとつで、「キー」と「値」の組み合わせの集合で、値がマップに格納される際に値とキーが紐づけられる。
     -- map [キーの型] 要素の型

 ・マップに格納されているキーと値の組み合わせ数を長さと言い、配列やスライスと同様にlen関数で取得できる。
 ・同じ参照型であるスライスのデータの実体は「配列」だが、マップではデータの実体にあたるものが無い為、マップの参照先のデータに直接アクセスすることができない。

 ・make関数を使うことで初期化する。キャパシティとはマップに格納可能な要素数のことで、省略可能。明示した場合で、要素数がキャパシティを越えそうな場合は自動的に拡張される。
     -- make(map[キーの型] 要素型, キャパシティの初期値)
	 -- make(map[キーの型] 要素型)

 ・キーと値の組み合わせをマップに格納したりマップから取り出したりするには、配列と同様にインデックスを使用するが、配列におけるインデックスが整数であるのに対し、
 　マップのインデックスでは マップ[キー] の形でキーを指定する。値を格納するときにインデックスも同時に定義するようなイメージ。
     -- すでに使用されているキーで値を格納した場合: 新しく指定した値で上書きされる
	 -- 未登録のキーを指定して値を取り出した時: その要素型のゼロ値が返される

 ・マップリテラルを使ったマップの初期化（ {}の位置によってはコンパイルエラーになるので注意！struct.goを参照
      -- マップ型 {キー: 値1, 値2, ...}

 ・マップから繰り返し値を取得する時、取得順はランダムで、格納順と必ずしも一致しない

 ・マップでは内部でキー同士の比較が行われるため、「関数型」「マップ型」「スライス型」などの比較演算子が実装されていない型をキーにすることはできない。
  => キーにインターフェース型を使用したときは、実行時にキーの値が比較できなければランタイムパニックが発生する。

*/
func main() {

	// マップを作成
	capitals := make(map[string] string)

	// インデックスを使用してマップに値を格納
	capitals["日本"] = "東京"
	capitals["アメリカ"] = "ワシントンD.C."
	capitals["中国"] = "北京"

	// インデックスを使用して値を取り出す
	fmt.Println(capitals["日本"])
	fmt.Println(capitals["アメリカ"])
	fmt.Println(capitals["中国"])
	fmt.Println()

	// rangeを使っても要素が取り出せる（ただし、マップから繰り返し値を取得する時、取得順はランダムで、格納順と必ずしも一致しない）
	for country, capital := range capitals {
		fmt.Println(country, capital)
	}
	fmt.Println()





	/*
	 マップのキーが存在するかどうか確認する方法
	 => 未登録のキーを指定して値を取り出した場合は、その要素型のゼロ値が返るため、登録した値がnilなのか、それとも未登録なのかが判別できない。
	    そこで、マップから値を取り出す時に要素の値と一緒にキーの有無を示す論理値型の値を受け取ることで判別する。
		キーが登録済みの場合はtrueに、未登録の場合はfalseになる。
	*/

	capital, ok := capitals["イギリス"]
	if ok {
		fmt.Println("登録済み", capital)
	} else {
		fmt.Println("未登録")
	}
	fmt.Println()





	/*
	 要素の削除: delete(マップ, キー) の形で記述する
	*/
	delete(capitals, "中国")

	// キーが中国のデータだけ削除されている
	for country, capital := range capitals {
		fmt.Println(country, capital)
	}
	fmt.Println()




	/*
	 マップリテラルを使ったマップの初期化
      =>マップ型 {キー: 値1, 値2, ...}
	*/
	capitals2 := map[string] string {
		"日本": "東京",
		"アメリカ": "ワシントンD.C.",
		"中国": "北京",
	}
	fmt.Println(capitals2)
}